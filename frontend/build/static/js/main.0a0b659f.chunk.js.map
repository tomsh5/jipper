{"version":3,"sources":["reducers/ProductReducer.js","reducers/UserReducer.js","store.js","services/userService.js","actions/UserActions.js","pages/JipperApp/JipperApp.jsx","services/httpService.js","services/productService.js","actions/ProductActions.js","cmps/ProductPreview/ProductPreview.jsx","cmps/ProductList/ProductList.jsx","cmps/ProductFilter/ProductFilter.jsx","pages/ProductPage/ProductPage.jsx","pages/ProductEdit/ProductEdit.jsx","pages/ProductDetails/ProductDetails.jsx","pages/OurStory/OurStory.jsx","pages/ShopingCart/ShopingCart.jsx","cmps/Navbar/Navber.jsx","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","products","filterBy","cartProducts","user","rootReducer","combineReducers","ProductReducer","state","action","type","product","filter","_id","id","map","console","log","UserReducer","balance","spend","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","userService","getUser","USER","name","coins","moves","_setUser","_JipperApp","this","props","setUser","setState","className","Component","mapDispatchToProps","dispatch","a","JipperApp","connect","axios","Axios","create","withCredentials","endpoint","data","ajax","method","url","res","dir","response","status","productService","getProducts","query","httpService","getProductById","deleteProduct","saveProduct","_updateProduct","_addProduct","getEmptyProduct","email","phone","_setProducts","ProductPreview","to","width","height","src","alt","ProductList","key","ProductFilter","txt","handleChange","target","field","value","onChangeFilter","onChange","_ProductPage","setFilter","loadProducts","getState","ProductPage","ProductEdit","onSaveProduct","ev","preventDefault","history","push","match","params","onSubmit","onClick","goBack","placeholder","_ProductDetails","productToCart","onDeleteProduct","onEdit","stopPropagation","onColorSelect","val","document","getElementById","OnAddToCart","addToCart","price","details","sizes","size","colors","color","imgs","img1","ProductDetails","OurStory","_ShopingCart","loadCartProducts","ShopingCart","Navbar","withRouter","activeClassName","exact","App","component","path","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0a0b659f.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n    products: null,\r\n    filterBy: null,\r\n    cartProducts: null\r\n}\r\n\r\nexport function ProductReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_PRODUCTS':\r\n            return {\r\n                ...state,\r\n                products: action.products\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filterBy\r\n            }\r\n        case 'ADD_PRODUCT':\r\n            return {\r\n                ...state,\r\n                products: [...state.products, action.product]\r\n            }\r\n        case 'REMOVE_PRODUCT':\r\n            return {\r\n                ...state,\r\n                products: state.products.filter(product => product._id !== action.id)\r\n            }\r\n        case 'UPDATE_PRODUCT':\r\n            return {\r\n                ...state,\r\n                products: state.products.map(product => product._id === action.product._id ? action.product : product)\r\n            }\r\n\r\n        case 'ADD_CART':\r\n            console.log(action.product);\r\n            console.log(state.cartProducts);\r\n            if (state.cartProducts) {\r\n                return {\r\n                    ...state,\r\n                    cartProducts: [state.cartProducts, action.product]\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartProducts: [action.product]\r\n                }\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","const INITIAL_STATE = {\r\n    user: null\r\n}\r\n\r\nexport function UserReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case 'SPEND_BALANCE':\r\n            return {\r\n                ...state,\r\n                user: { ...state.user, balance: state.user.balance - action.spend }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ProductReducer } from './reducers/ProductReducer'\r\nimport { UserReducer } from './reducers/UserReducer'\r\n// import { CartReducer } from './reducers/CartReducer'\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n// Only if you have a number of reducers:\r\nconst rootReducer = combineReducers({\r\n    // contactModule: ProductReducer,\r\n    ProductReducer,\r\n    UserReducer,\r\n    // CartReducer\r\n})\r\n// This is only for the redux dev tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","export const userService =  {\r\n    getUser\r\n  }\r\n  \r\n\r\nconst USER  = \r\n  { \r\n    name: \"Ochoa Hyde\", \r\n    coins: 100, \r\n    moves: [] \r\n  }\r\n\r\n\r\n  function getUser(){\r\n    console.log('Getting user..');\r\n    return USER;\r\n  }","import { userService } from '../services/userService.js'\r\n\r\nconst _setUser = (user) => ({ type: 'SET_USER', user })\r\nconst _spendBalance = (spendAmount) => ({ type: 'SPEND_BALANCE', spendAmount })\r\n\r\nexport function setUser() {\r\n    return async (dispatch) => {\r\n        const user = await userService.getUser()\r\n        console.log(user);\r\n        dispatch(_setUser(user))\r\n    }\r\n}\r\n\r\nexport function spendBalance(spendAmount) {\r\n    return (dispatch) => {\r\n        // Update the service/backend\r\n        dispatch(_spendBalance(spendAmount))\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { loadContacts, setFilter } from '../../actions/ContactActions'\r\nimport { setUser } from '../../actions/UserActions'\r\nimport { userService } from '../../services/userService.js'\r\nimport './JipperApp.scss'\r\n\r\nclass _JipperApp extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setUser()\r\n    }\r\n\r\n    async loadUser() {\r\n        const user = await userService.getUser()\r\n        this.setState({ user })\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props\r\n        if (!user) return <div>Loading....</div>\r\n        return (\r\n            <section>\r\n                <div className=\"home-hero\">\r\n                    \r\n                </div>\r\n                <h1>Welcome</h1>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        user: state.UserReducer.user\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    setUser\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const JipperApp = connect(mapStateProps, mapDispatchToProps)(_JipperApp)\r\n","// import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n        //   history.push('/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService';\n\nexport const productService = {\n  getProducts,\n  getProductById,\n  deleteProduct,\n  saveProduct,\n  getEmptyProduct\n}\n\nfunction getProducts(filterBy = '') {\n  console.log('gettin products..');\n\n  if(filterBy){\n  var {name} = filterBy;\n  const query = `?txt=${name}`;\n  return httpService.get(`product/${query}`);\n}\nelse{\n  return httpService.get(`product/`);\n}\n}\n\nfunction getProductById(_id) {\n  return httpService.get(`product/${_id}`)\n}\n\nfunction deleteProduct(_id) {\n return httpService.delete(`product/${_id}`)\n}\n\nfunction _updateProduct(product) {\nreturn httpService.put(`product/${product._id}`, product)\n}\n\nfunction _addProduct(product) {\nreturn httpService.post(`product`, product)\n}\n\nfunction saveProduct(product) {\n  return product._id ? _updateProduct(product) : _addProduct(product)\n}\n\nfunction getEmptyProduct() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}","import { productService } from \"../services/productService\"\r\n// Action Creator\r\nconst _setProducts = (products) => ({ type: 'SET_PRODUCTS', products })\r\nconst _removeProduct = (id) => ({ type: 'REMOVE_PRODUCT', id })\r\n\r\n// Action Dispatcher \r\nexport function loadProducts() {\r\n    return async (dispatch, getState) => {\r\n        const products = await productService.getProducts(getState().ProductReducer.filterBy)\r\n        const filterBy = getState().ProductReducer.filterBy\r\n        console.log(filterBy);\r\n        // products.filter(product => product.name === filterBy.name)\r\n        dispatch(_setProducts(products))\r\n    }\r\n}\r\n\r\nexport function loadCartProducts(){\r\n    return async (getState) => {\r\n    const cartProducts = await getState().ProductReducer.cartProducts\r\n    console.log(cartProducts);\r\n    return cartProducts\r\n    }\r\n}\r\n\r\nexport function removeProduct(id) {\r\n    return dispatch => {\r\n        return productService.remove(id).then(() => dispatch(_removeProduct(id)))\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filterBy })\r\n    }\r\n}\r\nexport function addToCart(product) {\r\n    return dispatch => {\r\n        dispatch({ type: 'ADD_CART', product })\r\n    }\r\n}","import React from 'react'\r\nimport './ProductPreview.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function ProductPreview(props) {\r\n    const {name, _id} = props.product\r\n    return (\r\n        <div className=\"product-preview flex column align-center\">\r\n            <Link className=\"flex\" to={`/product/${_id}`}>\r\n             <img width=\"200\" height=\"200\" src={`https://i.imgur.com/sl4f4Mr.jpg`} alt=\"img\"></img>\r\n             </Link>\r\n             <div className=\"sun-name\">\r\n             Mentsh Sun\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { ProductPreview } from '../ProductPreview/ProductPreview.jsx'\r\nimport './ProductList.scss'\r\n\r\nexport function ProductList(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"product-list flex wrap justify-center\">\r\n            {props.products.map(product =>\r\n                <ProductPreview key={product._id} product={product} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport './ProductFilter.scss'\r\n\r\nexport class ProductFilter extends Component {\r\n    state = {\r\n        name: '',\r\n        txt: 'y'\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.type === 'number' ? + target.value : target.value\r\n        this.setState({ [field]: value }, () => {\r\n            this.props.onChangeFilter({ ...this.state })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"product-filter flex justify-center\">\r\n                <label>Search</label>\r\n                <input name=\"name\" type=\"text\" onChange={this.handleChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadProducts, setFilter } from '../../actions/ProductActions'\r\nimport { productService } from '../../services/productService.js'\r\nimport { ProductList } from '../../cmps/ProductList/ProductList.jsx'\r\nimport {ProductFilter} from '../../cmps/ProductFilter/ProductFilter.jsx'\r\n\r\nclass _ProductPage extends Component {\r\n\r\n    state = {\r\n        products: null,\r\n        filterBy: null\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.props.loadProducts()\r\n       this.props.setFilter()\r\n\r\n    }\r\n\r\n    onChangeFilter = (filterBy) => {\r\n        this.props.setFilter(filterBy)\r\n        this.props.loadProducts()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {products} = this.props\r\n        if (!products) return <div>Loading....</div>\r\n\r\n        return (\r\n            <div className=\"main-layout\">\r\n                <ProductFilter onChangeFilter={ this.onChangeFilter } />\r\n               <ProductList products={products}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        products: state.ProductReducer.products\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    loadProducts,\r\n    setFilter\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ProductPage = connect(mapStateProps, mapDispatchToProps)(_ProductPage)\r\n","import React, { Component } from 'react'\r\nimport { productService } from '../../services/productService.js'\r\nimport './ProductEdit.scss'\r\n\r\nexport class ProductEdit extends Component {\r\n    state = {\r\n        product: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const product = id ? await productService.getProductById(id) : await productService.getEmptyProduct()\r\n        this.setState({ product })\r\n    }\r\n\r\n    onSaveProduct = async (ev) => {\r\n        ev.preventDefault()\r\n        await productService.saveProduct(this.state.product)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.type === 'number' ? +target.value : target.value\r\n        this.setState(({ product }) => ({ product: { ...product, [field]: value } }))\r\n    }\r\n\r\n    render() {\r\n        const { product } = this.state\r\n        if (!product) return <div>Loading...</div>\r\n\r\n        return (\r\n            <form className=\"product-edit\" onSubmit={this.onSaveProduct}>\r\n\r\n                <div className=\"flex justify-center space-between\">\r\n                    <i onClick={() => this.props.history.goBack()} className=\"fas fa-long-arrow-alt-left\"></i>\r\n                </div>\r\n\r\n                {(product._id) && <img width=\"200\" height=\"200\" src={`https://robohash.org/${product.name}?set=set5`} alt=\"img\"></img>}\r\n                {(!product._id) && <h2>Add New Product</h2>}\r\n                <div className=\"flex column\">\r\n                    <label>Name</label>\r\n                    <input name=\"name\" value={product.name} type=\"text\" onChange={this.handleChange} placeholder=\"Type Your Name...\" />\r\n                    <label>Email</label>\r\n                    <input name=\"email\" value={product.email} type=\"text\" onChange={this.handleChange} placeholder=\"Type Your Email...\" />\r\n                    <label>Phone</label>\r\n                    <input name=\"phone\" value={product.phone} type=\"text\" onChange={this.handleChange} placeholder=\"Type Your Phone...\" />\r\n                </div>\r\n\r\n                <button>Save</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from '../../actions/ProductActions'\r\nimport { productService } from '../../services/productService.js'\r\nimport './ProductDetails.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport class _ProductDetails extends Component {\r\n    state = {\r\n        product: null,\r\n        productToCart: null\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const product = await productService.getProductById(id)\r\n        this.setState({ product })\r\n        this.setState({productToCart: this.state.product})\r\n    }\r\n\r\n    onDeleteProduct = async () => {\r\n        await productService.deleteProduct(this.state.product._id)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.type === 'number' ? +target.value : target.value\r\n        this.setState(({ productToCart }) => ({ productToCart: { ...productToCart, [field]: value } }))\r\n        console.log(this.state.productToCart);\r\n    }\r\n\r\n    onEdit = (ev) => {\r\n        const { _id } = this.state.product\r\n        ev.stopPropagation()\r\n        this.props.history.push(`/product/edit/${_id}`)\r\n    }\r\n\r\n    onColorSelect = (ev) => {\r\n        const val = document.getElementById(\"color\").value;\r\n        console.log(val);\r\n        this.setState({\r\n            productToCart: val\r\n          })\r\n        // this.setState(productToCart.size = val)\r\n        console.log(this.state.productToCart);\r\n    }\r\n\r\n    OnAddToCart = (ev) => {\r\n        // const productToCart = this.state.productToCart\r\n        this.props.addToCart(this.state.productToCart)\r\n        // console.log(this.state.productToCart);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.product) return <div>Loading...</div>\r\n        const { name, price, details } = this.state.product\r\n        const sizes = details.size.map((size) => <option key={size}>{size}</option>);\r\n        const colors = details.color.map((color) => <option value={color} key={color}>{color}</option>);\r\n        return (\r\n            <div className=\"product-details main-layout\">\r\n                <Link  to={`/product`}>Back to collection</Link>\r\n                <section className=\"flex\">\r\n                    {/* <div className=\"flex space-between\"> */}\r\n                    {/* <i onClick={this.onDeleteProduct} className=\"far fa-trash-alt\"></i> */}\r\n                    {/* </div> */}\r\n                    <div className=\"product-imges\">\r\n                        <img width=\"500\" height=\"500\" src={details.imgs.img1} alt=\"img\"></img>\r\n                    </div>\r\n                    <div className=\"product-info\">\r\n                        <h2>{name}</h2>\r\n                        <span className=\"price\">{price} NIS</span>\r\n                        <h3>Description</h3>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Hic, sunt, \r\n                            maiores beatae cum quam nostrum ab iure temporibus, incidunt eveniet officiis exercitationem \r\n                            explicabo nam dignissimos velit ducimus impedit aliquid cupiditate!\r\n                        </p>\r\n                        <div>\r\n                        <select onChange={this.handleChange} name=\"size\" id=\"size\">\r\n                            <option>size</option>\r\n                            {sizes}\r\n                        </select>\r\n                        <select onChange={this.handleChange} className=\"select-color\" name=\"color\" id=\"color\">\r\n                            <option>color</option>\r\n                            {colors}\r\n                        </select>\r\n                       \r\n                        <button onClick={this.OnAddToCart}>Add To Cart</button>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"flex justify-end\">\r\n                <i onClick={this.onEdit} className=\"far fa-edit\"></i>\r\n                </div> */}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        cartProducts: state.ProductReducer.cartProducts\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    addToCart\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ProductDetails = connect(mapStateProps, mapDispatchToProps)(_ProductDetails)\r\n\r\n","import React, { useState } from 'react';\r\nimport './OurStory.scss'\r\n\r\n\r\nexport function OurStory(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n         <h2>Our Story</h2>  \r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadCartProducts } from '../../actions/ProductActions'\r\nimport './ShopingCart.scss'\r\n\r\n\r\nclass _ShopingCart extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadCartProducts()\r\n     }\r\n\r\n     render() {\r\n        const {cartProducts} = this.props\r\n        if (cartProducts) return <div>Loading....</div>\r\n\r\n        return (\r\n            <div className=\"main-layout\">\r\n               {cartProducts}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        products: state.ProductReducer.products\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    loadCartProducts\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ShopingCart = connect(mapStateProps, mapDispatchToProps)(_ShopingCart)","import React from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport './Navbar.scss'\r\n\r\nfunction _Navbar(props) {\r\n    return (\r\n        <div className='navbar flex space-between align-center'>\r\n\r\n            <h2><NavLink activeClassName='active-path' to=\"/\" exact > <i className=\"fab fa-angellist\"></i> Jipper</NavLink></h2>\r\n            <ul className=\"flex\"> \r\n                <li><NavLink activeClassName='active-path' to=\"/\" exact >Home</NavLink></li>\r\n                <li><NavLink to=\"/product\" exact >Collection</NavLink></li>\r\n                <li><NavLink to=\"/about\" exact >Our Story</NavLink></li>\r\n                {/* <li><NavLink to=\"/product/edit\" exact >Add-Product</NavLink></li> */}\r\n                <li><NavLink to=\"/cart\" exact ><i className=\"fas fa-shopping-cart\"></i></NavLink></li>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport const Navbar = withRouter(_Navbar)","import React from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport './App.scss';\nimport {JipperApp} from './pages/JipperApp/JipperApp.jsx'\nimport {ProductPage} from './pages/ProductPage/ProductPage.jsx'\nimport {ProductEdit} from './pages/ProductEdit/ProductEdit.jsx'\nimport {ProductDetails} from './pages/ProductDetails/ProductDetails.jsx'\nimport {OurStory} from './pages/OurStory/OurStory.jsx'\nimport {ShopingCart} from './pages/ShopingCart/ShopingCart.jsx'\nimport { Navbar } from './cmps/Navbar/Navber.jsx'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"App\">\n        <Switch>\n          <Route component={ ProductEdit } path=\"/product/edit/:id?\" />\n          <Route component={ ProductDetails } path=\"/product/:id\" />\n          <Route component={ OurStory } path=\"/about\" />\n          <Route component={ ShopingCart } path=\"/cart\" />\n          <Route component={ ProductPage } path=\"/product\" />\n          <Route component={ JipperApp } exact path=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={ store }>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}