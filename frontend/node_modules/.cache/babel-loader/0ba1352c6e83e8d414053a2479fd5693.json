{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\src\\\\pages\\\\ProductPage\\\\ProductPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadProducts, setFilter } from '../../actions/ProductActions';\nimport { productService } from '../../services/productService.js';\nimport { ProductList } from '../../cmps/ProductList/ProductList.jsx';\nimport { ProductFilter } from '../../cmps/ProductFilter/ProductFilter.jsx';\n\nclass _ProductPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: null,\n      filterBy: null\n    };\n\n    this.onChangeFilter = filterBy => {\n      this.props.setFilter(filterBy);\n      this.props.loadProducts();\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadProducts();\n    this.props.setFilter();\n  }\n\n  render() {\n    const {\n      products\n    } = this.props;\n    if (!products) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 31\n      }\n    }, \"Loading....\");\n    const product = products.map(product => product.name);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ProductFilter, {\n      onChangeFilter: this.onChangeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ProductList, {\n      products: products,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    }));\n  }\n\n} // gets the global state and puts it in the props of the component\n\n\nfunction mapStateProps(state) {\n  return {\n    products: state.ProductReducer.products\n  };\n} // Takes the action dispatchers from the actions file and puts them inside the component's props\n\n\nconst mapDispatchToProps = {\n  loadProducts,\n  setFilter\n}; // Connect is used to tap into the store, without it we have no access to the store from the component\n\nexport const ProductPage = connect(mapStateProps, mapDispatchToProps)(_ProductPage);","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/pages/ProductPage/ProductPage.jsx"],"names":["React","Component","connect","loadProducts","setFilter","productService","ProductList","ProductFilter","_ProductPage","state","products","filterBy","onChangeFilter","props","componentDidMount","render","product","map","name","mapStateProps","ProductReducer","mapDispatchToProps","ProductPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,8BAAxC;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAAQC,aAAR,QAA4B,4CAA5B;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCQ,KAFiC,GAEzB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFyB;;AAAA,SAajCC,cAbiC,GAafD,QAAD,IAAc;AAC3B,WAAKE,KAAL,CAAWT,SAAX,CAAqBO,QAArB;AACA,WAAKE,KAAL,CAAWV,YAAX;AACH,KAhBgC;AAAA;;AAOjCW,EAAAA,iBAAiB,GAAG;AACjB,SAAKD,KAAL,CAAWV,YAAX;AACA,SAAKU,KAAL,CAAWT,SAAX;AAEF;;AAQDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA;AAAD,QAAa,KAAKG,KAAxB;AACA,QAAI,CAACH,QAAL,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACf,UAAMM,OAAO,GAAGN,QAAQ,CAACO,GAAT,CAAcD,OAAD,IAAaA,OAAO,CAACE,IAAlC,CAAhB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,cAAc,EAAG,KAAKN,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEG,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADJ;AAMH;;AA9BgC,C,CAiCrC;;;AACA,SAASS,aAAT,CAAuBV,KAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACW,cAAN,CAAqBV;AAD5B,GAAP;AAGH,C,CACD;;;AACA,MAAMW,kBAAkB,GAAG;AACvBlB,EAAAA,YADuB;AAEvBC,EAAAA;AAFuB,CAA3B,C,CAIA;;AACA,OAAO,MAAMkB,WAAW,GAAGpB,OAAO,CAACiB,aAAD,EAAgBE,kBAAhB,CAAP,CAA2Cb,YAA3C,CAApB","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadProducts, setFilter } from '../../actions/ProductActions'\r\nimport { productService } from '../../services/productService.js'\r\nimport { ProductList } from '../../cmps/ProductList/ProductList.jsx'\r\nimport {ProductFilter} from '../../cmps/ProductFilter/ProductFilter.jsx'\r\n\r\nclass _ProductPage extends Component {\r\n\r\n    state = {\r\n        products: null,\r\n        filterBy: null\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.props.loadProducts()\r\n       this.props.setFilter()\r\n\r\n    }\r\n\r\n    onChangeFilter = (filterBy) => {\r\n        this.props.setFilter(filterBy)\r\n        this.props.loadProducts()\r\n    }\r\n\r\n\r\n    render() {\r\n        const {products} = this.props\r\n        if (!products) return <div>Loading....</div>\r\n        const product = products.map((product) => product.name);\r\n\r\n        return (\r\n            <div>\r\n                <ProductFilter onChangeFilter={ this.onChangeFilter } />\r\n               <ProductList products={products}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        products: state.ProductReducer.products\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    loadProducts,\r\n    setFilter\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ProductPage = connect(mapStateProps, mapDispatchToProps)(_ProductPage)\r\n"]},"metadata":{},"sourceType":"module"}