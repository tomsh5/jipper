{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\src\\\\cmps\\\\ProductPreview\\\\ProductPreview.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ProductPreview.scss';\nimport { Link } from 'react-router-dom';\n\nclass _ProductPreview extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.generateBtns = () => {\n      switch (this.props.listMode) {\n        case \"cartMode\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.handleDelete(this.props.product._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 21\n            }\n          }, \"X\"));\n\n        case \"wishListMode\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.handleDelete(this.props.product._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }\n          }, \"X\"), /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.handleAddToCart(this.props.item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 21\n            }\n          }, \"Add To Cart\"));\n\n        case \"adminMode\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.handleDelete(this.props.product._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }\n          }, \"delete\"), /*#__PURE__*/React.createElement(\"button\", {\n            onClick: () => this.handleEdit(this.props.product),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }\n          }, \"edit\"));\n\n        case \"customerMode\":\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }\n          });\n\n        default:\n          break;\n      }\n    };\n  }\n\n  render() {\n    const {\n      name,\n      imgs,\n      _id\n    } = this.props.product;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-preview flex column align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"flex\",\n      to: `/product/${_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: \"200\",\n      height: \"200\",\n      src: imgs.img1,\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sun-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, name));\n  }\n\n} // gets the global state and puts it in the props of the component\n\n\nfunction mapStateProps(state) {\n  return {};\n} // Takes the action dispatchers from the actions file and puts them inside the component's props\n\n\nconst mapDispatchToProps = {}; // Connect is used to tap into the store, without it we have no access to the store from the component\n\nexport const ProductPreview = connect(mapStateProps, mapDispatchToProps)(_ProductPreview);","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/cmps/ProductPreview/ProductPreview.jsx"],"names":["React","Component","connect","Link","_ProductPreview","generateBtns","props","listMode","handleDelete","product","_id","handleAddToCart","item","handleEdit","render","name","imgs","img1","mapStateProps","state","mapDispatchToProps","ProductPreview"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,uBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCI,YAFoC,GAErB,MAAM;AACjB,cAAQ,KAAKC,KAAL,CAAWC,QAAnB;AACI,aAAK,UAAL;AACI,8BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACJ;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkB,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAArC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADI,CAAR;;AAIJ,aAAK,cAAL;AACI,8BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACJ;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKF,YAAL,CAAkB,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAArC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADI,eAEJ;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,CAAqB,KAAKL,KAAL,CAAWM,IAAhC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFI,CAAR;;AAMJ,aAAK,WAAL;AACI,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKJ,YAAL,CAAkB,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAArC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,YAAA,OAAO,EAAE,MAAM,KAAKG,UAAL,CAAgB,KAAKP,KAAL,CAAWG,OAA3B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;;AAMJ,aAAK,cAAL;AACI,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;;AAKJ;AACI;AA3BR;AA6BH,KAhCmC;AAAA;;AAkCpCK,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcN,MAAAA;AAAd,QAAsB,KAAKJ,KAAL,CAAWG,OAAvC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,EAAE,EAAG,YAAWC,GAAI,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,MAAM,EAAC,KAAxB;AAA8B,MAAA,GAAG,EAAEM,IAAI,CAACC,IAAxC;AAA8C,MAAA,GAAG,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IADL,CAJJ,CADJ;AAWH;;AAjDmC,C,CAqDxC;;;AACA,SAASG,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAO,EAAP;AAIH,C,CACD;;;AACA,MAAMC,kBAAkB,GAAG,EAA3B,C,CAGA;;AACA,OAAO,MAAMC,cAAc,GAAEnB,OAAO,CAACgB,aAAD,EAAgBE,kBAAhB,CAAP,CAA2ChB,eAA3C,CAAtB","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './ProductPreview.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass _ProductPreview extends Component {\r\n\r\n    generateBtns = () => {\r\n        switch (this.props.listMode) {\r\n            case \"cartMode\":\r\n                return (<div>\r\n                    <button onClick={() => this.handleDelete(this.props.product._id)}>X</button>\r\n                </div>\r\n                )\r\n            case \"wishListMode\":\r\n                return (<div>\r\n                    <button onClick={() => this.handleDelete(this.props.product._id)}>X</button>\r\n                    <button onClick={() => this.handleAddToCart(this.props.item)}>Add To Cart</button>\r\n                </div>\r\n                )\r\n\r\n            case \"adminMode\":\r\n                return (\r\n                    <div>\r\n                        <button onClick={() => this.handleDelete(this.props.product._id)}>delete</button>\r\n                        <button onClick={() => this.handleEdit(this.props.product)}>edit</button>\r\n                    </div>\r\n                )\r\n            case \"customerMode\":\r\n                return (\r\n                    <div>\r\n                    </div>\r\n                )\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { name, imgs, _id } = this.props.product\r\n\r\n        return (\r\n            <div className=\"product-preview flex column align-center\">\r\n                <Link className=\"flex\" to={`/product/${_id}`}>\r\n                    <img width=\"200\" height=\"200\" src={imgs.img1} alt=\"img\"></img>\r\n                </Link>\r\n                <div className=\"sun-name\">\r\n                    {name}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        \r\n    }\r\n\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ProductPreview= connect(mapStateProps, mapDispatchToProps)(_ProductPreview)"]},"metadata":{},"sourceType":"module"}