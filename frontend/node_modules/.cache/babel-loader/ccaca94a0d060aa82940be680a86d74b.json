{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';// import { loadContacts, setFilter } from '../../actions/ContactActions'\nimport{setUser}from'../../actions/UserActions';import{userService}from'../../services/userService.js';import'./JipperApp.scss';var _JipperApp=/*#__PURE__*/function(_Component){_inherits(_JipperApp,_Component);var _super=_createSuper(_JipperApp);function _JipperApp(){var _this;_classCallCheck(this,_JipperApp);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:null};return _this;}_createClass(_JipperApp,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.setUser();}},{key:\"loadUser\",value:function(){var _loadUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return userService.getUser();case 2:user=_context.sent;this.setState({user:user});case 4:case\"end\":return _context.stop();}}},_callee,this);}));function loadUser(){return _loadUser.apply(this,arguments);}return loadUser;}()},{key:\"render\",value:function render(){var user=this.props.user;if(!user)return/*#__PURE__*/React.createElement(\"div\",null,\"Loading....\");return/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"home-hero\"}),/*#__PURE__*/React.createElement(\"h1\",null,\"Welcome\"));}}]);return _JipperApp;}(Component);// gets the global state and puts it in the props of the component\nfunction mapStateProps(state){return{user:state.UserReducer.user};}// Takes the action dispatchers from the actions file and puts them inside the component's props\nvar mapDispatchToProps={setUser:setUser};// Connect is used to tap into the store, without it we have no access to the store from the component\nexport var JipperApp=connect(mapStateProps,mapDispatchToProps)(_JipperApp);","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/pages/JipperApp/JipperApp.jsx"],"names":["React","Component","connect","setUser","userService","_JipperApp","state","user","props","getUser","setState","mapStateProps","UserReducer","mapDispatchToProps","JipperApp"],"mappings":"mhCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AACA,OAASC,OAAT,KAAwB,2BAAxB,CACA,OAASC,WAAT,KAA4B,+BAA5B,CACA,MAAO,kBAAP,C,GAEMC,CAAAA,U,2UAEFC,K,CAAQ,CACJC,IAAI,CAAE,IADF,C,mGAIY,CAChB,KAAKC,KAAL,CAAWL,OAAX,GACH,C,2QAGsBC,CAAAA,WAAW,CAACK,OAAZ,E,QAAbF,I,eACN,KAAKG,QAAL,CAAc,CAAEH,IAAI,CAAJA,IAAF,CAAd,E,oLAGK,IACEA,CAAAA,IADF,CACU,KAAKC,KADf,CACED,IADF,CAEL,GAAI,CAACA,IAAL,CAAW,mBAAO,6CAAP,CACX,mBACI,gDACI,2BAAK,SAAS,CAAC,WAAf,EADJ,cAII,wCAJJ,CADJ,CAQH,C,wBA1BoBN,S,EA6BzB;AACA,QAASU,CAAAA,aAAT,CAAuBL,KAAvB,CAA8B,CAC1B,MAAO,CACHC,IAAI,CAAED,KAAK,CAACM,WAAN,CAAkBL,IADrB,CAAP,CAGH,CACD;AACA,GAAMM,CAAAA,kBAAkB,CAAG,CACvBV,OAAO,CAAPA,OADuB,CAA3B,CAGA;AACA,MAAO,IAAMW,CAAAA,SAAS,CAAGZ,OAAO,CAACS,aAAD,CAAgBE,kBAAhB,CAAP,CAA2CR,UAA3C,CAAlB","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { loadContacts, setFilter } from '../../actions/ContactActions'\r\nimport { setUser } from '../../actions/UserActions'\r\nimport { userService } from '../../services/userService.js'\r\nimport './JipperApp.scss'\r\n\r\nclass _JipperApp extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setUser()\r\n    }\r\n\r\n    async loadUser() {\r\n        const user = await userService.getUser()\r\n        this.setState({ user })\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props\r\n        if (!user) return <div>Loading....</div>\r\n        return (\r\n            <section>\r\n                <div className=\"home-hero\">\r\n                    \r\n                </div>\r\n                <h1>Welcome</h1>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        user: state.UserReducer.user\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    setUser\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const JipperApp = connect(mapStateProps, mapDispatchToProps)(_JipperApp)\r\n"]},"metadata":{},"sourceType":"module"}