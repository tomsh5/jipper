{"ast":null,"code":"import { contactService } from \"../services/productService\"; // Action Creator\n\nconst _setContacts = contacts => ({\n  type: 'SET_CONTACTS',\n  contacts\n});\n\nconst _removeContact = id => ({\n  type: 'REMOVE_CONTACT',\n  id\n}); // Action Dispatcher \n\n\nexport function loadContacts() {\n  return async (dispatch, getState) => {\n    const contacts = await contactService.getContacts(getState().ContactReducer.filterBy);\n    console.log(contacts);\n    dispatch(_setContacts(contacts));\n  };\n}\nexport function removeContact(id) {\n  return dispatch => {\n    return contactService.remove(id).then(() => dispatch(_removeContact(id)));\n  };\n}\nexport function setFilter(filterBy) {\n  return dispatch => {\n    dispatch({\n      type: 'SET_FILTER',\n      filterBy\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/actions/ContactActions.js"],"names":["contactService","_setContacts","contacts","type","_removeContact","id","loadContacts","dispatch","getState","getContacts","ContactReducer","filterBy","console","log","removeContact","remove","then","setFilter"],"mappings":"AAAA,SAASA,cAAT,QAA+B,4BAA/B,C,CACA;;AACA,MAAMC,YAAY,GAAIC,QAAD,KAAe;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBD,EAAAA;AAAxB,CAAf,CAArB;;AACA,MAAME,cAAc,GAAIC,EAAD,KAAS;AAAEF,EAAAA,IAAI,EAAE,gBAAR;AAA0BE,EAAAA;AAA1B,CAAT,CAAvB,C,CAEA;;;AACA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,UAAMN,QAAQ,GAAG,MAAMF,cAAc,CAACS,WAAf,CAA2BD,QAAQ,GAAGE,cAAX,CAA0BC,QAArD,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAK,IAAAA,QAAQ,CAACN,YAAY,CAACC,QAAD,CAAb,CAAR;AACH,GAJD;AAKH;AAED,OAAO,SAASY,aAAT,CAAuBT,EAAvB,EAA2B;AAC9B,SAAOE,QAAQ,IAAI;AACf,WAAOP,cAAc,CAACe,MAAf,CAAsBV,EAAtB,EAA0BW,IAA1B,CAA+B,MAAMT,QAAQ,CAACH,cAAc,CAACC,EAAD,CAAf,CAA7C,CAAP;AACH,GAFD;AAGH;AAED,OAAO,SAASY,SAAT,CAAmBN,QAAnB,EAA6B;AAChC,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,YAAR;AAAsBQ,MAAAA;AAAtB,KAAD,CAAR;AACH,GAFD;AAGH","sourcesContent":["import { contactService } from \"../services/productService\"\r\n// Action Creator\r\nconst _setContacts = (contacts) => ({ type: 'SET_CONTACTS', contacts })\r\nconst _removeContact = (id) => ({ type: 'REMOVE_CONTACT', id })\r\n\r\n// Action Dispatcher \r\nexport function loadContacts() {\r\n    return async (dispatch, getState) => {\r\n        const contacts = await contactService.getContacts(getState().ContactReducer.filterBy)\r\n        console.log(contacts);\r\n        dispatch(_setContacts(contacts))\r\n    }\r\n}\r\n\r\nexport function removeContact(id) {\r\n    return dispatch => {\r\n        return contactService.remove(id).then(() => dispatch(_removeContact(id)))\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filterBy })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}