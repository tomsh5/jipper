{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\src\\\\pages\\\\ShopingCart\\\\ShopingCart.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { orderService } from \"../../services/orderService\";\nimport { loadOrder } from '../../actions/OrderActions';\nimport './ShopingCart.scss';\n\nclass _ShopingCart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: null\n    };\n  }\n\n  async componentDidMount() {\n    awthis.props.loadOrder();\n    console.log(this.props.order);\n  }\n\n  async loadOrder() {\n    const order = await orderService.getOrder();\n    this.setState({\n      order\n    });\n  }\n\n  render() {\n    const {\n      order\n    } = this.props;\n    if (!order) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }\n    }, \"Loading....\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, order.products[0].name);\n  }\n\n} // gets the global state and puts it in the props of the component\n\n\nfunction mapStateProps(state) {\n  return {\n    order: state.OrderReducer.order\n  };\n} // Takes the action dispatchers from the actions file and puts them inside the component's props\n\n\nconst mapDispatchToProps = {\n  loadOrder\n}; // Connect is used to tap into the store, without it we have no access to the store from the component\n\nexport const ShopingCart = connect(mapStateProps, mapDispatchToProps)(_ShopingCart);","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/pages/ShopingCart/ShopingCart.jsx"],"names":["React","Component","connect","orderService","loadOrder","_ShopingCart","state","order","componentDidMount","awthis","props","console","log","getOrder","setState","render","products","name","mapStateProps","OrderReducer","mapDispatchToProps","ShopingCart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAO,oBAAP;;AAGA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCK,KAFiC,GAEzB;AACJC,MAAAA,KAAK,EAAE;AADH,KAFyB;AAAA;;AAMjC,QAAMC,iBAAN,GAA0B;AACtBC,IAAAA,MAAM,CAACC,KAAP,CAAaN,SAAb;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWH,KAAvB;AACF;;AAED,QAAMH,SAAN,GAAkB;AACf,UAAMG,KAAK,GAAG,MAAMJ,YAAY,CAACU,QAAb,EAApB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;AACH;;AAEAQ,EAAAA,MAAM,GAAG;AAEN,UAAM;AAACR,MAAAA;AAAD,QAAU,KAAKG,KAArB;AACA,QAAI,CAACH,KAAL,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAEZ,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACS,QAAN,CAAe,CAAf,EAAkBC,IADvB,CADJ;AAMP;;AA3BoC,C,CA6BrC;;;AACA,SAASC,aAAT,CAAuBZ,KAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACa,YAAN,CAAmBZ;AADvB,GAAP;AAIH,C,CACD;;;AACA,MAAMa,kBAAkB,GAAG;AACvBhB,EAAAA;AADuB,CAA3B,C,CAGA;;AACA,OAAO,MAAMiB,WAAW,GAAGnB,OAAO,CAACgB,aAAD,EAAgBE,kBAAhB,CAAP,CAA2Cf,YAA3C,CAApB","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { orderService } from \"../../services/orderService\"\r\nimport { loadOrder } from '../../actions/OrderActions'\r\nimport './ShopingCart.scss'\r\n\r\n\r\nclass _ShopingCart extends Component {\r\n\r\n    state = {\r\n        order: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        awthis.props.loadOrder()\r\n        console.log(this.props.order);\r\n     }\r\n\r\n     async loadOrder() {\r\n        const order = await orderService.getOrder()\r\n        this.setState({ order })\r\n    }\r\n\r\n     render() {\r\n         \r\n        const {order} = this.props\r\n        if (!order) return <div>Loading....</div>\r\n        \r\n        return (\r\n            <div className=\"main-layout\">\r\n                {order.products[0].name}\r\n            </div>\r\n        )\r\n    \r\n}\r\n}\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        order: state.OrderReducer.order\r\n    }\r\n\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    loadOrder\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ShopingCart = connect(mapStateProps, mapDispatchToProps)(_ShopingCart)"]},"metadata":{},"sourceType":"module"}