{"ast":null,"code":"import { productService } from \"../services/productService\"; // Action Creator\n\nconst _setProducts = products => ({\n  type: 'SET_PRODUCTS',\n  products\n});\n\nconst _removeProduct = id => ({\n  type: 'REMOVE_PRODUCT',\n  id\n}); // Action Dispatcher \n\n\nexport function loadProducts() {\n  return async (dispatch, getState) => {\n    const products = await productService.getProducts(getState().ProductReducer.filterBy);\n    const filterBy = getState().ProductReducer.filterBy;\n    console.log(filterBy); // products.filter(product => product.name === filterBy.name)\n\n    dispatch(_setProducts(products));\n  };\n}\nexport function loadCartProducts() {\n  return;\n}\nexport function removeProduct(id) {\n  return dispatch => {\n    return productService.remove(id).then(() => dispatch(_removeProduct(id)));\n  };\n}\nexport function setFilter(filterBy) {\n  return dispatch => {\n    dispatch({\n      type: 'SET_FILTER',\n      filterBy\n    });\n  };\n}\nexport function addToCart(product) {\n  return dispatch => {\n    dispatch({\n      type: 'ADD_CART',\n      product\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/actions/ProductActions.js"],"names":["productService","_setProducts","products","type","_removeProduct","id","loadProducts","dispatch","getState","getProducts","ProductReducer","filterBy","console","log","loadCartProducts","removeProduct","remove","then","setFilter","addToCart","product"],"mappings":"AAAA,SAASA,cAAT,QAA+B,4BAA/B,C,CACA;;AACA,MAAMC,YAAY,GAAIC,QAAD,KAAe;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBD,EAAAA;AAAxB,CAAf,CAArB;;AACA,MAAME,cAAc,GAAIC,EAAD,KAAS;AAAEF,EAAAA,IAAI,EAAE,gBAAR;AAA0BE,EAAAA;AAA1B,CAAT,CAAvB,C,CAEA;;;AACA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,UAAMN,QAAQ,GAAG,MAAMF,cAAc,CAACS,WAAf,CAA2BD,QAAQ,GAAGE,cAAX,CAA0BC,QAArD,CAAvB;AACA,UAAMA,QAAQ,GAAGH,QAAQ,GAAGE,cAAX,CAA0BC,QAA3C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAHiC,CAIjC;;AACAJ,IAAAA,QAAQ,CAACN,YAAY,CAACC,QAAD,CAAb,CAAR;AACH,GAND;AAOH;AAED,OAAO,SAASY,gBAAT,GAA2B;AAC9B;AAEH;AAED,OAAO,SAASC,aAAT,CAAuBV,EAAvB,EAA2B;AAC9B,SAAOE,QAAQ,IAAI;AACf,WAAOP,cAAc,CAACgB,MAAf,CAAsBX,EAAtB,EAA0BY,IAA1B,CAA+B,MAAMV,QAAQ,CAACH,cAAc,CAACC,EAAD,CAAf,CAA7C,CAAP;AACH,GAFD;AAGH;AAED,OAAO,SAASa,SAAT,CAAmBP,QAAnB,EAA6B;AAChC,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,YAAR;AAAsBQ,MAAAA;AAAtB,KAAD,CAAR;AACH,GAFD;AAGH;AACD,OAAO,SAASQ,SAAT,CAAmBC,OAAnB,EAA4B;AAC/B,SAAOb,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,UAAR;AAAoBiB,MAAAA;AAApB,KAAD,CAAR;AACH,GAFD;AAGH","sourcesContent":["import { productService } from \"../services/productService\"\r\n// Action Creator\r\nconst _setProducts = (products) => ({ type: 'SET_PRODUCTS', products })\r\nconst _removeProduct = (id) => ({ type: 'REMOVE_PRODUCT', id })\r\n\r\n// Action Dispatcher \r\nexport function loadProducts() {\r\n    return async (dispatch, getState) => {\r\n        const products = await productService.getProducts(getState().ProductReducer.filterBy)\r\n        const filterBy = getState().ProductReducer.filterBy\r\n        console.log(filterBy);\r\n        // products.filter(product => product.name === filterBy.name)\r\n        dispatch(_setProducts(products))\r\n    }\r\n}\r\n\r\nexport function loadCartProducts(){\r\n    return\r\n\r\n}\r\n\r\nexport function removeProduct(id) {\r\n    return dispatch => {\r\n        return productService.remove(id).then(() => dispatch(_removeProduct(id)))\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filterBy })\r\n    }\r\n}\r\nexport function addToCart(product) {\r\n    return dispatch => {\r\n        dispatch({ type: 'ADD_CART', product })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}