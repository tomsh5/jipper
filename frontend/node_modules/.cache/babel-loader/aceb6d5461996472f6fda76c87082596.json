{"ast":null,"code":"import httpService from './httpService';\nimport storageService from './storageService';\nexport default {\n  addItemtoCart,\n  getOrder,\n  removeItemFromCart,\n  add,\n  clearCart,\n  getMyOrders\n};\n\nasync function addItemtoCart(item) {\n  const addeditem = await storageService.post(`order`, item);\n  return addeditem;\n}\n\nasync function getOrder() {\n  const itemsInCart = await storageService.query(`order`);\n  return itemsInCart;\n}\n\nasync function removeItemFromCart(item) {\n  const items = await storageService.remove(`order`, item);\n  return items;\n}\n\nasync function add(order) {\n  const savedOrder = await httpService.post('order', order);\n  return savedOrder;\n}\n\nasync function clearCart() {\n  StorageService.clearStorage('order');\n} // export const orderService = { \n//   getOrder,\n//   getOrderById,\n//   deleteOrder,\n//   saveOrder,\n// }\n// // function getOrder() {\n// //   console.log('getting order on service');\n// //   return httpService.get(`order/`);\n// // }\n// // function getOrderById(_id) {\n// //   return httpService.get(`order/${_id}`)\n// // }\n// // function deleteOrder(_id) {\n// //  return httpService.delete(`order/${_id}`)\n// // }\n// // function _updateOrder(order) {\n// // return httpService.put(`order/${order._id}`, order)\n// // }\n// // function _addOrder(order) {\n// // return httpService.post(`order`, order)\n// // }\n// // function saveOrder(order) {\n// //   return order._id ? _updateOrder(order) : _addOrder(order)\n// // }","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/services/orderService.js"],"names":["httpService","storageService","addItemtoCart","getOrder","removeItemFromCart","add","clearCart","getMyOrders","item","addeditem","post","itemsInCart","query","items","remove","order","savedOrder","StorageService","clearStorage"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe;AACbC,EAAAA,aADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,kBAHa;AAIbC,EAAAA,GAJa;AAKbC,EAAAA,SALa;AAMbC,EAAAA;AANa,CAAf;;AAUA,eAAeL,aAAf,CAA6BM,IAA7B,EAAmC;AACjC,QAAMC,SAAS,GAAG,MAAMR,cAAc,CAACS,IAAf,CAAqB,OAArB,EAA6BF,IAA7B,CAAxB;AACA,SAAOC,SAAP;AACD;;AAED,eAAeN,QAAf,GAA0B;AACxB,QAAMQ,WAAW,GAAG,MAAMV,cAAc,CAACW,KAAf,CAAsB,OAAtB,CAA1B;AACA,SAAOD,WAAP;AACD;;AAED,eAAeP,kBAAf,CAAkCI,IAAlC,EAAwC;AACtC,QAAMK,KAAK,GAAG,MAAMZ,cAAc,CAACa,MAAf,CAAuB,OAAvB,EAA+BN,IAA/B,CAApB;AACA,SAAOK,KAAP;AAED;;AAED,eAAeR,GAAf,CAAmBU,KAAnB,EAA0B;AACxB,QAAMC,UAAU,GAAE,MAAMhB,WAAW,CAACU,IAAZ,CAAiB,OAAjB,EAAyBK,KAAzB,CAAxB;AACA,SAAOC,UAAP;AACD;;AAED,eAAeV,SAAf,GAA2B;AACzBW,EAAAA,cAAc,CAACC,YAAf,CAA4B,OAA5B;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import httpService from './httpService';\r\nimport storageService from './storageService';\r\n\r\nexport default {\r\n  addItemtoCart,\r\n  getOrder,\r\n  removeItemFromCart,\r\n  add,\r\n  clearCart,\r\n  getMyOrders\r\n};\r\n\r\n\r\nasync function addItemtoCart(item) {\r\n  const addeditem = await storageService.post(`order`, item);\r\n  return addeditem\r\n}\r\n\r\nasync function getOrder() {\r\n  const itemsInCart = await storageService.query(`order`);\r\n  return itemsInCart\r\n}\r\n\r\nasync function removeItemFromCart(item) {\r\n  const items = await storageService.remove(`order`, item);\r\n  return items\r\n\r\n}\r\n\r\nasync function add(order) {\r\n  const savedOrder =await httpService.post('order',order)\r\n  return savedOrder\r\n}\r\n\r\nasync function clearCart() {\r\n  StorageService.clearStorage('order')\r\n}\r\n\r\n// export const orderService = { \r\n//   getOrder,\r\n//   getOrderById,\r\n//   deleteOrder,\r\n//   saveOrder,\r\n// }\r\n\r\n// // function getOrder() {\r\n// //   console.log('getting order on service');\r\n// //   return httpService.get(`order/`);\r\n// // }\r\n\r\n// // function getOrderById(_id) {\r\n// //   return httpService.get(`order/${_id}`)\r\n// // }\r\n\r\n// // function deleteOrder(_id) {\r\n// //  return httpService.delete(`order/${_id}`)\r\n// // }\r\n\r\n// // function _updateOrder(order) {\r\n// // return httpService.put(`order/${order._id}`, order)\r\n// // }\r\n\r\n// // function _addOrder(order) {\r\n// // return httpService.post(`order`, order)\r\n// // }\r\n\r\n// // function saveOrder(order) {\r\n// //   return order._id ? _updateOrder(order) : _addOrder(order)\r\n// // }\r\n"]},"metadata":{},"sourceType":"module"}