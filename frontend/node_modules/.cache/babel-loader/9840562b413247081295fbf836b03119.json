{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\src\\\\pages\\\\ShopingCart\\\\ShopingCart.jsx\";\nimport React, { useState } from 'react';\nimport { loadCartProducts } from '../../actions/ProductActions';\nimport './ShopingCart.scss';\n\nclass _ShopingCart extends Component {\n  componentDidMount() {\n    this.props.loadCartProducts();\n  }\n\n  render() {\n    const {\n      cartProducts\n    } = this.props;\n    if (cartProducts) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }\n    }, \"Loading....\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, cartProducts);\n  }\n\n} // gets the global state and puts it in the props of the component\n\n\nfunction mapStateProps(state) {\n  return {\n    products: state.ProductReducer.products\n  };\n} // Takes the action dispatchers from the actions file and puts them inside the component's props\n\n\nconst mapDispatchToProps = {\n  loadCartProducts\n}; // Connect is used to tap into the store, without it we have no access to the store from the component\n\nexport const ShopingCart = connect(mapStateProps, mapDispatchToProps)(_ShopingCart);","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/pages/ShopingCart/ShopingCart.jsx"],"names":["React","useState","loadCartProducts","_ShopingCart","Component","componentDidMount","props","render","cartProducts","mapStateProps","state","products","ProductReducer","mapDispatchToProps","ShopingCart","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAO,oBAAP;;AAGA,MAAMC,YAAN,SAA2BC,SAA3B,CAAqC;AAEjCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,gBAAX;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACN,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKF,KAA5B;AACA,QAAIE,YAAJ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAElB,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,YADJ,CADJ;AAKH;;AAfgC,C,CAkBrC;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,QAAQ,EAAED,KAAK,CAACE,cAAN,CAAqBD;AAD5B,GAAP;AAGH,C,CACD;;;AACA,MAAME,kBAAkB,GAAG;AACvBX,EAAAA;AADuB,CAA3B,C,CAGA;;AACA,OAAO,MAAMY,WAAW,GAAGC,OAAO,CAACN,aAAD,EAAgBI,kBAAhB,CAAP,CAA2CV,YAA3C,CAApB","sourcesContent":["import React, { useState } from 'react';\r\nimport { loadCartProducts } from '../../actions/ProductActions'\r\nimport './ShopingCart.scss'\r\n\r\n\r\nclass _ShopingCart extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadCartProducts()\r\n     }\r\n\r\n     render() {\r\n        const {cartProducts} = this.props\r\n        if (cartProducts) return <div>Loading....</div>\r\n\r\n        return (\r\n            <div className=\"main-layout\">\r\n               {cartProducts}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        products: state.ProductReducer.products\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    loadCartProducts\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const ShopingCart = connect(mapStateProps, mapDispatchToProps)(_ShopingCart)"]},"metadata":{},"sourceType":"module"}