{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomsh\\\\Desktop\\\\Projects\\\\jipper\\\\frontend\\\\src\\\\pages\\\\BitcoinApp\\\\BitcoinApp.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import { loadContacts, setFilter } from '../../actions/ContactActions'\n\nimport { setUser } from '../../actions/UserActions';\nimport { userService } from '../../services/userService.js';\nimport './BitcoinApp.scss';\n\nclass _BitcoinApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      bitcoinRate: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.setUser();\n  }\n\n  async loadUser() {\n    const user = await userService.getUser();\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    const {\n      bitcoinRate\n    } = this.state;\n    const {\n      user\n    } = this.props;\n    if (!user && !bitcoinRate) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }\n    }, \"Loading....\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Welcome\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, user.name), /*#__PURE__*/React.createElement(\"img\", {\n      width: \"100\",\n      height: \"100\",\n      src: `https://robohash.org/${user.name}?set=set5`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \" Your balance: \", user.coins));\n  }\n\n} // gets the global state and puts it in the props of the component\n\n\nfunction mapStateProps(state) {\n  return {\n    user: state.UserReducer.user\n  };\n} // Takes the action dispatchers from the actions file and puts them inside the component's props\n\n\nconst mapDispatchToProps = {\n  setUser\n}; // Connect is used to tap into the store, without it we have no access to the store from the component\n\nexport const BitcoinApp = connect(mapStateProps, mapDispatchToProps)(_BitcoinApp);","map":{"version":3,"sources":["C:/Users/tomsh/Desktop/Projects/jipper/frontend/src/pages/BitcoinApp/BitcoinApp.jsx"],"names":["React","Component","connect","setUser","userService","_BitcoinApp","state","user","bitcoinRate","componentDidMount","props","loadUser","getUser","setState","render","name","coins","mapStateProps","UserReducer","mapDispatchToProps","BitcoinApp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AAGA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCK,KAFgC,GAExB;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,WAAW,EAAE;AAFT,KAFwB;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWP,OAAX;AACH;;AAED,QAAMQ,QAAN,GAAiB;AACb,UAAMJ,IAAI,GAAG,MAAMH,WAAW,CAACQ,OAAZ,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACN,MAAAA;AAAD,QAAgB,KAAKF,KAA3B;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKG,KAApB;AACA,QAAI,CAACH,IAAD,IAAS,CAACC,WAAd,EAA2B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAC3B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACQ,IAAT,CAFF,eAGE;AAAM,MAAA,KAAK,EAAC,KAAZ;AAAkB,MAAA,MAAM,EAAC,KAAzB;AAA+B,MAAA,GAAG,EAAI,wBAAuBR,IAAI,CAACQ,IAAK,WAAvE;AAAoF,MAAA,GAAG,EAAC,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmBR,IAAI,CAACS,KAAxB,CAJF,CADJ;AAQH;;AA5B+B,C,CA+BpC;;;AACA,SAASC,aAAT,CAAuBX,KAAvB,EAA8B;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACY,WAAN,CAAkBX;AADrB,GAAP;AAGH,C,CACD;;;AACA,MAAMY,kBAAkB,GAAG;AACvBhB,EAAAA;AADuB,CAA3B,C,CAGA;;AACA,OAAO,MAAMiB,UAAU,GAAGlB,OAAO,CAACe,aAAD,EAAgBE,kBAAhB,CAAP,CAA2Cd,WAA3C,CAAnB","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { loadContacts, setFilter } from '../../actions/ContactActions'\r\nimport { setUser } from '../../actions/UserActions'\r\nimport { userService } from '../../services/userService.js'\r\n\r\n\r\nimport './BitcoinApp.scss'\r\n\r\nclass _BitcoinApp extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n        bitcoinRate: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setUser()\r\n    }\r\n\r\n    async loadUser() {\r\n        const user = await userService.getUser()\r\n        this.setState({ user })\r\n    }\r\n\r\n    render() {\r\n        const {bitcoinRate} = this.state\r\n        const {user} = this.props\r\n        if (!user && !bitcoinRate) return <div>Loading....</div>\r\n        return (\r\n            <div>\r\n                <h1>Welcome</h1>\r\n              <p>{user.name}</p>\r\n              <img  width=\"100\" height=\"100\" src={ `https://robohash.org/${user.name}?set=set5` } alt=\"\" />\r\n              <p> Your balance: {user.coins}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// gets the global state and puts it in the props of the component\r\nfunction mapStateProps(state) {\r\n    return {\r\n        user: state.UserReducer.user\r\n    }\r\n}\r\n// Takes the action dispatchers from the actions file and puts them inside the component's props\r\nconst mapDispatchToProps = {\r\n    setUser\r\n}\r\n// Connect is used to tap into the store, without it we have no access to the store from the component\r\nexport const BitcoinApp = connect(mapStateProps, mapDispatchToProps)(_BitcoinApp)\r\n"]},"metadata":{},"sourceType":"module"}